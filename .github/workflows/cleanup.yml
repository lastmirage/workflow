name: Clean Up PR

on:
  pull_request:
    branches:
      - develop
    types:
      - closed

jobs:
  cleanup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set Names
        uses: ./.github/actions/set-names
        id: names

      - name: Clean Up
        run: echo "Clean Up"
  
  is-versioning-pr:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    outputs:
      is_versioning_pr: ${{ steps.check.outputs.is_version_pr }}
      version: ${{ steps.check.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set Names
        uses: ./.github/actions/set-names
        id: names
      - name: validate semver
        id: check
        uses: ./.github/actions/set-names
        with:
          version: ${{ steps.names.outputs.BRANCH_NAME }}

  release-stage:
    permissions: write-all
    if: ${{ needs.is-versioning-pr.outputs.is_versioning_pr == 1 }}
    runs-on: ubuntu-latest
    needs:
      - is-versioning-pr
    steps:
      - name: Create tag
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/${{ needs.is-versioning-pr.outputs.version }}',
              sha: context.sha
            })

      - name: Merge develop -> staging
        uses: devmasx/merge-branch@master
        with:
          type: now
          from_branch: develop
          target_branch: stage
          github_token: ${{ secrets.GITHUB_TOKEN }}
